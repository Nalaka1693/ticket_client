package client;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import servicelib.AvailabilityResponse;
import servicelib.HttpService;
import servicelib.Request;
import servicelib.ReservationResponse;

public class TicketClient {
	Request req = new Request("A", "B", 1);
	
	public static void main(String[] args) {
		ExecutorService executorService = Executors.newFixedThreadPool(4);
		executorService.submit(this);
	}
	
	public void getAvailablity(Request request) throws Exception {
		AvailabilityResponse avbRes = (AvailabilityResponse) HttpService
				.sendGet("http://localhost:8080/availability-service/check", request);
		System.out.println(avbRes.toString());
	}
	
	public void setRevervation(Request request) throws Exception {
		ReservationResponse resvRes = (ReservationResponse) HttpService
				.sendPost("http://localhost:8080/reservation-service/reserve", request);
		System.out.println(resvRes.toString());
	}
	
	public static class Sender implements Runnable {
		
	}
	
	public void sender() {
		try {
			for (int i = 0; i < 22; i++) {
				getAvailablity(req);
				setRevervation(req);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		sender();
	}
}
